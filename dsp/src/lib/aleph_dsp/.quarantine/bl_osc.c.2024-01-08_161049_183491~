#include <fract_math.h>

#include "bl_osc.h"
#include "fix.h"
#include "types.h"

static inline fract32 blosc_lookup(blOsc *osc, fix16 phase);

// set waveshape (table)
extern void blosc_set_shape(blOsc *osc, fract32 shape) {}

// set frequency
extern void blosc_set_freq(blOsc *osc, fract32 freq) {}

// set modulated phase
extern void blosc_set_pm(blOsc *osc, fract32 freq) {}

// get next value
extern fract32 blosc_get_next(blOsc *osc) {
    // modulated phase
    fix16 phase;
    // phase of inverted signal
    fix16 phaseInv;
    // main signal
    fract32 sig;
    // inverted signal
    fract32 sigInv;

    /// TODO: Test: renamed modPhase to idxMod,
    ///             were these supposed to be the same paramenter?
    //
    // main phase, with modulation
    phase = fix16_add(osc->phase, osc->idxMod);
    // wrap sum
    while (phase > osc->maxIdx) {
        phase = fix16_sub(phase, osc->maxIdx);
    }

    // main signal
    sig = blosc_lookup(osc, phase);

    //  phase for inverted signal
    phaseInv = fix16_add(phase, osc->invPhase);

    /// TODO: Should this be using phaseInv?
    //
    // inverted signal
    sigInv =
        mult_fr1x32x32(BIT_INVERT_32(blosc_lookup(osc, phase)), osc->invAmp);

    sig = add_fr1x32(sig, sigInv);

    // advance main phase
    osc->phase = fix16_add(osc->phase, osc->inc);
    // wrap after advance
    while (osc->phase > osc->maxIdx) {
        osc->phase = fix16_sub(osc->phase, osc->maxIdx);
    }
    // return signal
    return sig;
}

/// TODO: Blindly copied from osc.c to fix compilation.
//
static inline fract32 blosc_lookup(blOsc *osc, fix16 phase) {
    // u32 idxA = osc->shapeMod >> WAVE_TAB_RSHIFT;
    // u32 idxB = idxA + 1;
    //
    // fract32 mul = (osc->shapeMod & WAVE_SHAPE_MASK) << WAVE_TAB_LSHIFT;
    // fract32 mulInv = sub_fr1x32(FR32_MAX, mul);
    //
    // return add_fr1x32(
    //     mult_fr1x32x32(table_lookup_idx_mask((fract32 *)(*(osc->tab))[idxA],
    //                                          WAVE_TAB_SIZE_1, osc->idxMod),
    //                    mulInv),
    //     mult_fr1x32x32(table_lookup_idx_mask((fract32 *)(*(osc->tab))[idxB],
    //                                          WAVE_TAB_SIZE_1, osc->idxMod),
    //                    mul));
}
